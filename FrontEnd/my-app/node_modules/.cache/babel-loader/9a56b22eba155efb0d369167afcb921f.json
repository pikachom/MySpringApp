{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\uBC14\\uD0D5\\uD654\\uBA74/dev/source/react/my-app/src/Auth/RegisterToken.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport authMethods, { authorizationInfo, test } from \"./AuthStore\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { runInAction, toJS } from \"mobx\";\nimport { useObserver, observer } from \"mobx-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterToken = observer(_c = _s(({\n  match,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  _s();\n\n  useEffect(() => {\n    console.log(test.testt);\n    authMethods.setDefaultAxiosRequestHeader(match.params.token);\n    authMethods.setUserInfo(match.params.token);\n    authMethods.setAuthorizationInfo(true);\n    console.log(authorizationInfo);\n    test.testt = toJS(test).testt + \"asdf\";\n  });\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => localStorage.getItem(\"users\") ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/users/sign_in\",\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"));\n_c2 = RegisterToken;\nexport default RegisterToken;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RegisterToken$observer\");\n$RefreshReg$(_c2, \"RegisterToken\");","map":{"version":3,"sources":["/home/ubuntu/바탕화면/dev/source/react/my-app/src/Auth/RegisterToken.js"],"names":["React","useEffect","authMethods","authorizationInfo","test","Route","Redirect","runInAction","toJS","useObserver","observer","RegisterToken","match","component","Component","render","rest","console","log","testt","setDefaultAxiosRequestHeader","params","token","setUserInfo","setAuthorizationInfo","props","localStorage","getItem","pathname","state","from","location"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,IAAsBC,iBAAtB,EAAyCC,IAAzC,QAAqD,aAArD;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,MAAlC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,YAAtC;;AAEA,MAAMC,aAAa,GAAGD,QAAQ,SAC5B,CAAC;AAAEE,EAAAA,KAAF;AAASC,EAAAA,SAAS,EAAEC,SAApB;AAA+BC,EAAAA,MAA/B;AAAuC,KAAGC;AAA1C,CAAD,KAAsD;AAAA;;AACpDf,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACe,KAAjB;AACAjB,IAAAA,WAAW,CAACkB,4BAAZ,CAAyCR,KAAK,CAACS,MAAN,CAAaC,KAAtD;AACApB,IAAAA,WAAW,CAACqB,WAAZ,CAAwBX,KAAK,CAACS,MAAN,CAAaC,KAArC;AACApB,IAAAA,WAAW,CAACsB,oBAAZ,CAAiC,IAAjC;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYf,iBAAZ;AACAC,IAAAA,IAAI,CAACe,KAAL,GAAaX,IAAI,CAACJ,IAAD,CAAJ,CAAWe,KAAX,GAAmB,MAAhC;AACD,GAPQ,CAAT;AAQA,sBACE,QAAC,KAAD,OACMH,IADN;AAEE,IAAA,MAAM,EAAGS,KAAD,IACNC,YAAY,CAACC,OAAb,CAAqB,OAArB,iBACE,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFG,QAAAA,QAAQ,EAAE,gBADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3B2B,kCAA9B;MAAMpB,a;AA8BN,eAAeA,aAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport authMethods, { authorizationInfo, test } from \"./AuthStore\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { runInAction, toJS } from \"mobx\";\nimport { useObserver, observer } from \"mobx-react\";\n\nconst RegisterToken = observer(\n  ({ match, component: Component, render, ...rest }) => {\n    useEffect(() => {\n      console.log(test.testt);\n      authMethods.setDefaultAxiosRequestHeader(match.params.token);\n      authMethods.setUserInfo(match.params.token);\n      authMethods.setAuthorizationInfo(true);\n      console.log(authorizationInfo);\n      test.testt = toJS(test).testt + \"asdf\";\n    });\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          localStorage.getItem(\"users\") ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/users/sign_in\",\n                state: { from: props.location },\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n);\n\nexport default RegisterToken;\n"]},"metadata":{},"sourceType":"module"}