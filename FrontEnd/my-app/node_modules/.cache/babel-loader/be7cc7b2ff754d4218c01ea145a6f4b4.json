{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\uBC14\\uD0D5\\uD654\\uBA74/dev/source/react/my-app/src/Auth/AuthRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthRoute = ({\n  authenticated,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => authenticated ? render ? render(props) : /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AuthRoute;\nexport default AuthRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRoute\");","map":{"version":3,"sources":["/home/ubuntu/바탕화면/dev/source/react/my-app/src/Auth/AuthRoute.js"],"names":["React","Route","Redirect","AuthRoute","authenticated","component","Component","render","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,aADiB;AAEjBC,EAAAA,SAAS,EAAEC,SAFM;AAGjBC,EAAAA,MAHiB;AAIjB,KAAGC;AAJc,CAAD,KAKZ;AACJ,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IACNL,aAAa,GACXG,MAAM,GACJA,MAAM,CAACE,KAAD,CADF,gBAGJ,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,YAJS,gBAOX,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B;AADN;AAAA;AAAA;AAAA;AAAA;AAVN;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAxBD;;KAAMV,S;AA0BN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst AuthRoute = ({\n  authenticated,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated ? (\n          render ? (\n            render(props)\n          ) : (\n            <Component {...props} />\n          )\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default AuthRoute;\n"]},"metadata":{},"sourceType":"module"}